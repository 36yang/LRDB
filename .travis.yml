sudo: false
language: cpp

compiler:
  - clang
  - gcc
before_install:
  - pip install --user 'requests[security]'
  - pip install --user cpp-coveralls
install:
- if [ "$CXX" = "g++" ]; then export COVERAGE=$COV; fi
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - liblua5.2-dev
    - libluajit-5.1-dev
    - clang
    - valgrind
env:
  - BUILD_TYPE=Debug LUALIB=lua5.2 CXX_FLAGS=-std=c++11 COV=On
  - BUILD_TYPE=Release LUALIB=lua5.2 CXX_FLAGS=-std=c++11
  - BUILD_TYPE=Debug LUALIB=luajit CXX_FLAGS=-std=c++11 COV=On
  - BUILD_TYPE=Release LUALIB=luajit CXX_FLAGS=-std=c++11
script:
  - cmake . -DCOVERAGE=${COVERAGE} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DLUA_SEARCH_LIB_NAME=${LUALIB} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} && make && ctest --output-on-failure -T memcheck

after_success: |

  if [ "$CXX" = "g++" ]; then
    export GCOV="gcov"
  fi
  if [ -n "$GCOV" ] && [ -n "$COVERAGE" ]; then
    coveralls --gcov ${GCOV} --exclude test --exclude third_party --gcov-options '\-lp'
  fi
